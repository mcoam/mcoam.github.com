<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Pupet, | Bitácora]]></title>
  <link href="http://mcoam.github.io/blog/categories/pupet/atom.xml" rel="self"/>
  <link href="http://mcoam.github.io/"/>
  <updated>2014-08-02T23:04:22-04:00</updated>
  <id>http://mcoam.github.io/</id>
  <author>
    <name><![CDATA[Miguel Angel Coa Morales]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Controlando la ejecución de Exec en Puppet]]></title>
    <link href="http://mcoam.github.io/blog/2014/07/23/controlando-la-ejecucion-de-exec-en-puppet/"/>
    <updated>2014-07-23T21:25:00-04:00</updated>
    <id>http://mcoam.github.io/blog/2014/07/23/controlando-la-ejecucion-de-exec-en-puppet</id>
    <content type="html"><![CDATA[<p>En Puppet podemos ejecutar comando a nivel del sistema operativo por medio de <code>Exec</code>, en ocasiones sucede que tenemos declarada la sintaxis a ejecutar pero sucede que esta se aplica cada vez que corre el agente Puppet, Ejemplo:
```ruby
exec{&ldquo;install-rpm&rdquo;:</p>

<pre><code>ensure  =&gt; present, 
command =&gt; 'rpm -Uvh /root/package.rpm',
</code></pre>

<p>}
```
Lo anterior instalará un rpm llamado <code>package.rpm</code> cada vez que corra el agente, lo que pisará las configuraciones ya realizadas en la instalación y post-instalación del rpm. Para evitar que esto suceda <code>Exec</code> maneja dos atributos <code>creates</code> y <code>onlyif</code> ambos como condicionantes para que se puede ejecutar el comando.
<li>creates</li>
Funciona del modo que para ejecutar el atributo <code>command</code> no tiene que existir &ldquo;algo&rdquo; que se define con el atributo <code>creates</code>, ejemplo:</p>

<p><code>ruby
exec{"install-rpm":
ensure  =&gt; present,
creates =&gt; '/opt/rpm-directory/',
command =&gt; 'rpm -Uvh /root/package.rpm',
}
</code>
Lo anterior dice que; para que se ejecute el <code>exec</code> no tiene que estar creado el directorio <code>/opt/rpm-directory/</code>, si este ya esta creado, es por que ya tenemos instalado el rpm y no es necesario volver a instalarlo.</p>

<p><li>onlyif</li>
Funciona del modo que para ejecutar el atributo <code>command</code> el resultado del atributo <code>onlyif</code> debe retornar value 0 &ldquo;nada&rdquo; como respuesta a la condición, ejemplo:</p>

<p><code>ruby
exec{"install-rpm":
ensure  =&gt; present,
onlyif =&gt; "ls /opt/ |grep rpm-directory"
command =&gt; 'rpm -Uvh /root/package.rpm',
}
</code>
Lo anterior dice que; para que se ejecute el <code>exec</code> la salida del <code>onlyif</code> debe retornar 0. Si el rpm ya lo tenemos instalado, este va a crear el directorio por lo que para evitar que se siga instalando solo vemos si este ya fue creado. Si el rpm fue instalado, el <code>onlyif</code> retornará un <i>1</i> por lo que no se volverá a ejecutar nuevamente.</p>

<p>Link <a href="http://docs.puppetlabs.com/references/latest/type.html#exec-attribute">documentación</a></p>
]]></content>
  </entry>
  
</feed>
