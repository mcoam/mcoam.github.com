<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: de | Bitácora]]></title>
  <link href="http://www.miguelcoa.cl/blog/categories/de/atom.xml" rel="self"/>
  <link href="http://www.miguelcoa.cl/"/>
  <updated>2016-04-15T17:05:59-03:00</updated>
  <id>http://www.miguelcoa.cl/</id>
  <author>
    <name><![CDATA[Miguel Angel Coa Morales]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[SAMBA4.localo controlador de dominio A/D]]></title>
    <link href="http://www.miguelcoa.cl/blog/2014/08/20/samba4-como-controlador-de-dominio-a-slash-d/"/>
    <updated>2014-08-20T10:57:00-04:00</updated>
    <id>http://www.miguelcoa.cl/blog/2014/08/20/samba4-como-controlador-de-dominio-a-slash-d</id>
    <content type="html"><![CDATA[<p>Para Centos 6 tenemos que complilar las fuentes para instalar Samba4:</p>

<p>Instalar paqueteria necesaria
<code>ruby
[root@samba ~]$ yum -y install gcc make wget python-devel gnutls-devel openssl-devel libacl-devel krb5-server krb5-libs krb5-workstation bind bind-libs bind-utils
</code>
Descargamos y lo compilamos
<code>ruby
[root@samba ~]$ git clone git://git.samba.org/samba.git samba4
[root@samba ~]$ cd samba4
[root@samba ~]$ ./configure --enable-selftest
[root@samba ~]$ make &amp;&amp; make install #Esto demora bastante
</code>
Terminado lo anterior y si no arroja ningún error, tendremos instalado Samba4. Ahora necesitamos configurar el controlador de dominio, lo primiero que tenemos que hacer es el <i>Provisioning</i> para el nuevo dominio.</p>

<p>Unas cosas antes a considerar:
Configuramos el hostname en la tabla hosts <code>/etc/hosts</code>
```ruby
[root@samba ~]$ cat /etc/hosts
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6</p>

<p>10.10.0.200 samba.example.local samba
<code>
Y el servidor de nombres en el &lt;code&gt;/etc/resolv.conf&lt;/code&gt;
</code>ruby
[root@samba ~]$ cat /etc/resolv.conf
search example.local
domain example.local
nameserver 127.0.0.1
```
Esto es necesario para los servicios Samba y Kerberos, además, tenemos que configurar el parámetro <code>dns forwarder</code> dentro del archivo de configuración del servicio (esto si no lo hacemos dentro del proceso del provisionamiento).</p>

<p>NOTA: El servidor tiene que tener correctamente sincronizada la hora (utilizar NTP)</p>

<h4>Provisionando el nuevo dominio</h4>

<p><code>ruby
/usr/local/samba/bin/samba-tool domain provision
</code>
Y completamos con los datos solicitados
<code>ruby
Realm [EXAMPLE.LOCAL]: (press Enter)
Domain [EXAMPLE]: (press Enter) #CON MAYUSCULAS
Server Role (dc, member, standalone) [dc]: (press Enter)
DNS backend (SAMBA_INTERNAL, BIND9_FLATFILE, BIND9_DLZ, NONE) [SAMBA_INTERNAL]: (press Enter)
DNS forwarder IP address (write 'none' to disable forwarding) [10.10.0.1]: 10.10.0.1
Administrator password: &lt;set_password&gt;
Retype password:
</code>
Con todo el proceso anterior realizado, al final de todo veremos algo como lo siguiente
<code>ruby
Fixing provision GUIDs
A Kerberos configuration suitable for Samba 4 has been generated at /usr/local/samba/private/krb5.conf
Once the above files are installed, your Samba4 server will be ready to use
Server Role:           active directory domain controller
Hostname:              samba
NetBIOS Domain:        EXAMPLE
DNS Domain:            example.local
DOMAIN SID:            S-1-5-21-3438009546-7273XXXX-XXXXXXXXX
</code>
Y luego reiniciamos el servidor</p>

<p>El path de instalación de Samaba4 queda bajo <code>/usr/local/samba/</code> los mismo sucede con los binarios <code>/usr/local/samba/bin/</code> y <code>/usr/local/samba/sbin/</code> para lo cual vamos a configurar la variable <code>$PATH</code> en nuestro bash.
```ruby
[root@samba ~]# vim ~/.bashrc</p>

<h1>Dentro colocamos</h1>

<p>export PATH=&ldquo;/usr/local/samba/sbin:/usr/local/samba/bin:$PATH&rdquo;
<code>
Para ver que quedó todo en orden ejecutamos
</code>ruby
[root@samba ~]# samba -V
Version 4.1.11
[root@samba ~]# smbclient -V
Version 4.1.11
<code>
Chequeamos la configuración local al Samba y los procesos corriendo
</code>ruby
[root@samba ~]#  ps -ef | grep samba
root     23010     1  1 12:32 ?        00:00:00 samba
root     23011 23010  0 12:32 ?        00:00:00 samba
root     23012 23010  0 12:32 ?        00:00:00 samba
root     23013 23010  0 12:32 ?        00:00:00 samba
root     23014 23010  0 12:32 ?        00:00:00 samba
root     23015 23011  1 12:32 ?        00:00:00 /usr/local/samba/sbin/smbd -D &mdash;option=server role check:inhibit=yes &mdash;foreground
root     23016 23010  2 12:32 ?        00:00:00 samba
root     23017 23010  0 12:32 ?        00:00:00 samba
<code>
</code>ruby
[root@samba ~]# /usr/local/samba/bin/smbclient -L localhost -U%
Domain=[EXAMPLE] OS=[Unix] Server=[Samba 4.1.11]</p>

<pre><code>    Sharename       Type      Comment
    ---------       ----      -------
    netlogon        Disk
    sysvol          Disk
    IPC$            IPC       IPC Service (Samba 4.1.11)
</code></pre>

<p>Domain=[EXAMPLE] OS=[Unix] Server=[Samba 4.1.11]</p>

<pre><code>    Server               Comment
    ---------            -------

    Workgroup            Master
    ---------            -------
</code></pre>

<p><code>
El proceso de configuración del Samba va a crear un archivo kerberos de la configuración relaizada, tenemos que enlazarlo al directorio &lt;code&gt;/etc&lt;/code&gt;
</code>ruby
[root@samba ~]$ mv /etc/krb5.conf /etc/krb5.conf.ORG
[root@samba ~]$ ln -s /usr/local/samba/private/krb5.conf  /etc/
<code>
Comprobamos el funcionamiento en kerberos
</code>ruby
[root@samba ~]# host -t SRV <em>ldap.</em>tcp.example.local.
<em>ldap.</em>tcp.example.local has SRV record 0 100 389 samba.example.local.
<code>
Comprobamos la autentificación contra kerberos
</code>ruby
[root@samba ~]# kinit <a href="&#109;&#x61;&#x69;&#x6c;&#116;&#x6f;&#x3a;&#97;&#x64;&#x6d;&#x69;&#x6e;&#105;&#x73;&#116;&#114;&#x61;&#x74;&#111;&#x72;&#x40;&#x45;&#88;&#65;&#x4d;&#80;&#x4c;&#x45;&#x2e;&#x4c;&#79;&#x43;&#65;&#x4c;">&#97;&#100;&#x6d;&#x69;&#110;&#105;&#115;&#x74;&#x72;&#x61;&#x74;&#x6f;&#x72;&#64;&#x45;&#88;&#x41;&#77;&#x50;&#x4c;&#69;&#x2e;&#x4c;&#x4f;&#67;&#65;&#76;</a>
Password for administrator@EXAMPLE.LOCAL:
Warning: Your password will expire in 41 days on Wed Oct  1 16:28:11 2014
```</p>

<p>Si por el contrario nos arroja algún error, tenemos que ver las configuraciones realizadas o reconfigurar el servicio samba</p>

<h4>Script de arranque</h4>

<p>Para el control del servicio creamos el siguiente script
```ruby
[root@samba ~]$ cat /etc/init.d/samba4</p>

<h1>! /bin/bash</h1>

<p>#</p>

<h1>samba4 Bring up/down samba4 service</h1>

<p>#</p>

<h1>chkconfig: &ndash; 90 10</h1>

<h1>description: Activates/Deactivates all samba4 interfaces configured to</h1>

<h1>chkconfig: &ndash; 90 10</h1>

<h1>description: Activates/Deactivates all samba4 interfaces configured to</h1>

<h1>start at boot time.</h1>

<p>#</p>

<h3>BEGIN INIT INFO</h3>

<h1>Provides:</h1>

<h1>Should-Start:</h1>

<h1>Short-Description: Bring up/down samba4</h1>

<h1>Description: Bring up/down samba4</h1>

<h3>END INIT INFO</h3>

<h1>Source function library.</h1>

<p>. /etc/init.d/functions</p>

<p>if [ -f /etc/sysconfig/samba4 ]; then
. /etc/sysconfig/samba4
fi</p>

<p>CWD=$(pwd)
prog=&ldquo;samba4&rdquo;</p>

<p>start() {</p>

<h1>Attach irda device</h1>

<p>echo -n $&ldquo;Starting $prog: &rdquo;
/usr/local/samba/sbin/samba
sleep 2
if ps ax | grep -v &ldquo;grep&rdquo; | grep -q /samba/sbin/samba ; then success $&ldquo;samba4 startup&rdquo;; else failure $&ldquo;samba4 startup&rdquo;; fi
echo
}
stop() {</p>

<h1>Stop service.</h1>

<p>echo -n $&ldquo;Shutting down $prog: &rdquo;
killall samba
sleep 2
if ps ax | grep -v &ldquo;grep&rdquo; | grep -q /samba/sbin/samba ; then failure $&ldquo;samba4 shutdown&rdquo;; else success $&ldquo;samba4 shutdown&rdquo;; fi
echo
}
status() {
/usr/local/samba/sbin/samba &mdash;show-build
}</p>

<h1>See how we were called.</h1>

<p>case &ldquo;$1&rdquo; in
start)
start
;;
stop)
stop
;;
status)
status irattach
;;
restart|reload)
stop
start
;;
*)
echo $&ldquo;Usage: $0 {start|stop|restart|status}&rdquo;
exit 1
esac</p>

<p>exit 0
<code>
Configuramos los permisos
</code>ruby
[root@samba ~]$ chmod +x /etc/init.d/samba4
<code>
Finalmente dejamos los servicios para correr por defecto
</code>ruby
[root@samba ~]$ chkconfig &mdash;levels 235 samba4 on
[root@samba ~]$ chkconfig &mdash;levels 235 ntp on
[root@samba ~]$ chkconfig &mdash;levels 235 named on
```
Ahora ya tenemos configurado el Samba, desde ahora podemos empezar a conectar a los usuarios.</p>

<h4>Uniendo una máquina al dominio</h4>

<h4>Getión remota del controlado de dominio (Remote Server Administration Tool)</h4>

<p>Para la gestión remota del controlador de dominio descargamos <i>Remote Server Administration Tool</i> desde <a href="http://www.microsoft.com/es-es/download/details.aspx?id=7887">acá</a>:
 Instalación</p>

<ol>
<li>Lo instalamos como cualquier exe</li>
<li>Panel de control </li>
<li>Programas y caracteristicas</li>
<li>Activar o desactivar caracteristicas</li>
<li>Seleccionamos las caracteristicas asociadas al A/D</li>
<li>Reinciamos la máquina Windows</li>
<li>Inicio -> Ejecutar -> "Usuarios y Equipos de Active Directory" y veremos el arbol de nuestro Samba4</li>
</ol>


<p>Para mas detalles del RSTA <a href="https://wiki.samba.org/index.php/Installing_RSAT_on_Windows_for_AD_Management">acá</a></p>
]]></content>
  </entry>
  
</feed>
